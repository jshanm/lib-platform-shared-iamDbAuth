buildscript {

	ext { 
		jfrogBuildInfoPluginVersion 			= '4.4.12'
		dynamodbVersion = '1.11.128'
		snippetsDir = file('build/generated-snippets') 
	}

	repositories {
		maven {
			url 'https://eis.jfrog.io/eis/plugins-release'
			credentials {
				username = project.artifactory_user
				password = project.artifactory_password
			}
		}
	}

	dependencies {		
		classpath "io.spring.gradle:dependency-management-plugin:0.6.0.RELEASE"
    		classpath "org.jfrog.buildinfo:build-info-extractor-gradle:${jfrogBuildInfoPluginVersion}"
	}
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'eclipse'
apply plugin: 'com.jfrog.artifactory'
apply plugin: 'io.spring.dependency-management'

// Compilation settings
sourceCompatibility = 1.8
targetCompatibility = 1.8

group 	= 'com.ebsco.platform.shared'
version	= '0.0.1.SNAPSHOT'


ext {
    swaggerVersion = '2.6.1'
    awsRdsVersion = '1.11.255'
}

configurations.all {
	exclude group: "ch.qos.logback", module: "logback-classic"
}

dependencyManagement {
    imports {
        mavenBom "com.ebsco.starters:ebsco-spring-boot-starter-parent:1.0.1.RELEASE"
        mavenBom "com.ebsco.starters:ebsco-spring-boot-starter-logging:1.0.1.RELEASE"
    }
    dependencies 
    { 
    	dependency "com.ebsco.common:lib-platform-shared-logging-core:1.3.7.RELEASE"
		dependency "com.ebsco.common:lib-platform-shared-metric-core:1.1.1.RELEASE"
    }
}

dependencies {
	// Swagger dependencies
    compile("io.springfox:springfox-swagger2:$swaggerVersion")
    compile("io.springfox:springfox-swagger-ui:$swaggerVersion")
	compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.5'
	compile group: 'org.springframework.boot', name: 'spring-boot-autoconfigure', version: '1.2.2.RELEASE'
	testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test'
	
	compile("com.amazonaws:aws-java-sdk-rds:$awsRdsVersion")

	
}

repositories {
	mavenLocal()
	maven {
		url 'https://eis.jfrog.io/eis/libs-release-local'
		credentials {
			username = project.artifactory_user
			password = project.artifactory_password
		}
	}
}

artifactory {
	//The base Artifactory URL if not overridden by the publisher/resolver
	contextUrl = project.artifactory_contextUrl

	resolve {
		repository {
			repoKey = 'libs-release'
			username = project.artifactory_user
			password = project.artifactory_password
		}
	}

	publish {
		repository {
			repoKey = 'libs-release-local'
			username = project.artifactory_user
			password = project.artifactory_password
			maven = true
		}

		defaults { publications ('mavenJava') }
	}
}

task sourcesJar ( type: Jar, dependsOn: classes ) {
	classifier 'sources'
	from sourceSets.main.allJava
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}

test {	
	outputs.dir snippetsDir
	
	testLogging {
	
		events "PASSED", "STARTED", "FAILED", "SKIPPED"
        // set options for log level LIFECYCLE
        events "failed"
        exceptionFormat "full"

        // set options for log level DEBUG
        debug {
            events "started", "skipped", "failed"
            exceptionFormat "full"
        }

        // remove standard output/error logging from --info builds
        // by assigning only 'failed' and 'skipped' events
        info.events = ["failed", "skipped"]
    }
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
			artifact sourcesJar
			artifact javadocJar
		}
	}
}
